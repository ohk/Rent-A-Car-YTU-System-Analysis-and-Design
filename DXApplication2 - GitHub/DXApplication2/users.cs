//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DXApplication2
{
    using System;
    using System.Collections.Generic;
    
    public partial class users
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public users()
        {
            this.accounting = new HashSet<accounting>();
            this.Rent = new HashSet<Rent>();
        }
    
        public int userId { get; set; }
        public string username { get; set; }
        public string password { get; set; }
        public string userNameSurname { get; set; }
        public Nullable<System.DateTime> userAge { get; set; }
        public string licenseId { get; set; }
        public Nullable<System.DateTime> licenseYear { get; set; }
        public string userTc { get; set; }
        public string userAdress { get; set; }
        public Nullable<int> userScore { get; set; }
        public Nullable<int> usermembership { get; set; }
        public Nullable<int> usergroup { get; set; }
        public Nullable<System.DateTime> userAccountCreated { get; set; }
        public Nullable<int> userMonthlyRent { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<accounting> accounting { get; set; }
        public virtual groups groups { get; set; }
        public virtual MemberShipType MemberShipType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Rent> Rent { get; set; }
    }
}
